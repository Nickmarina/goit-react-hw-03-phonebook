{"version":3,"sources":["components/ContactForm/styles.js","components/ContactForm/index.jsx","components/ContactList/styles.js","components/ContactList/index.jsx","components/Filter/styles.js","components/Filter/index.jsx","App.js","index.js"],"names":["useStyles","createUseStyles","form","display","flexDirection","flex","title","margin","padding","maginBottom","fontSize","color","input","btn","width","marginTop","backgroundColor","ContactForm","onChangeContacts","classes","useState","name","setName","number","setNumber","className","onSubmit","e","preventDefault","newContact","id","shortid","generate","type","value","pattern","required","onChange","target","list","item","marginBottom","fontWeight","span","marginRight","ContactList","contacts","onDeleteContact","map","onClick","Filter","onFilter","filter","container","marginLeft","App","setContacts","setFilter","normalizedContact","toLowerCase","contactsForList","contact","includes","useEffect","data","JSON","parse","localStorage","getItem","setItem","stringify","find","alert","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d02d0c0.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss';\nconst useStyles = createUseStyles({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n  },\n  title: {\n    margin: 0,\n    padding: 0,\n    maginBottom: 10,\n    fontSize: 20,\n    color: 'lightslategray',\n  },\n  input: {\n    padding: 5,\n  },\n  btn: {\n    width: 150,\n    marginTop: 10,\n    padding: 5,\n    backgroundColor: 'paleturquoise',\n  },\n});\n\nexport default useStyles;\n","import React, { useState } from 'react';\nimport shortid from 'shortid';\nimport useStyles from './styles';\n\nconst ContactForm = ({ onChangeContacts }) => {\n  const classes = useStyles();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    onChangeContacts(newContact);\n    setName('');\n    setNumber('');\n  };\n\n  const handleChangeName = e => setName(e.target.value);\n  const handleChangeNumber = e => setNumber(e.target.value);\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit}>\n      <label>\n        <h3 className={classes.title}>Name</h3>\n        <input\n          className={classes.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChangeName}\n        />\n      </label>\n      <label>\n        <h3 className={classes.title}>Number</h3>\n        <input\n          className={classes.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          onChange={handleChangeNumber}\n        />\n      </label>\n      <button className={classes.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { createUseStyles } from 'react-jss';\nconst useStyles = createUseStyles({\n  list: {\n    margin: 0,\n    padding: 0,\n    marginTop: 20,\n  },\n  item: {\n    marginBottom: 5,\n    fontWeight: 600,\n  },\n  span: {\n    marginRight: 10,\n    fontWeight: 400,\n  },\n  btn: {\n    color: 'maroon',\n    backgroundColor: 'salmon',\n  },\n});\n\nexport default useStyles;\n","import PropTypes from 'prop-types';\nimport useStyles from './styles';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  const classes = useStyles();\n  return (\n    <ul className={classes.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={classes.item} key={id}>\n          {name}: <span className={classes.span}>{number}</span>\n          <button\n            className={classes.btn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default ContactList;\n","import { createUseStyles } from 'react-jss';\nconst useStyles = createUseStyles({\n  title: {\n    margin: 0,\n    padding: 0,\n    maginBottom: 10,\n    color: 'lightslategray',\n  },\n  input: {\n    padding: 5,\n  },\n});\n\nexport default useStyles;\n","import useStyles from './styles';\nconst Filter = ({ onFilter, filter }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <h4 className={classes.title}>Find contacts by name</h4>\n      <input\n        className={classes.input}\n        type=\"text\"\n        value={filter}\n        onChange={onFilter}\n      ></input>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst useStyles = createUseStyles({\n  container: {\n    marginLeft: 30,\n  },\n});\n\nconst App = () => {\n  const classes = useStyles();\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  const handleChangeContacts = newContact => {\n    return contacts.find(contact => contact.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts`)\n      : setContacts(prevState => [...prevState, newContact]);\n  };\n\n  const handleFilter = e => setFilter(e.target.value);\n  const normalizedContact = filter.toLowerCase();\n  const contactsForList = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedContact),\n  );\n\n  const hadleDeleteContact = id => {\n    setContacts(prevState => prevState.filter(contact => contact.id !== id));\n  };\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('contacts'));\n    setContacts(data);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className={classes.container}>\n      <h1>Phonebook</h1>\n      <ContactForm onChangeContacts={handleChangeContacts} />\n      <h2>Contacts</h2>\n      <Filter onFilter={handleFilter} filter={filter} />\n      <ContactList\n        contacts={contactsForList}\n        onDeleteContact={hadleDeleteContact}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}